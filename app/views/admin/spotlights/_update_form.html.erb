<% url_options = params_for(:action => :update) -%>
<%=
form_tag url_options,
         :onsubmit => onsubmit,
         :id => element_form_id(:action => :update),
         :multipart => active_scaffold_config.update.multipart?,
         :class => 'update',
         :method => :put
%>

  <h4><%= @record.to_label.nil? ? active_scaffold_config.update.label : as_(:update_model, :model => clean_column_value(@record.to_label)) %></h4>

  <div id="<%= element_messages_id(:action => :update) %>" class="messages-container">
<% if request.xhr? -%>
    <%= error_messages_for :record, :object_name => @record.class.human_name.downcase %>
<% else -%>
    <%= render :partial => 'form_messages' %>
<% end -%>
  </div>

  <%= render :partial => 'form', :locals => { :columns => active_scaffold_config.update.columns } %>

  <p class="form-footer">
    <input type="submit" value="Update" class="submit"
           onClick="var oEditor = FCKeditorAPI.GetInstance('record_<%=@record.id%>_<%='html'%>_editor');
           $('record_<%=@record.id%>_<%='html' %>_editor_hidden').value = oEditor.GetXHTML();" />
    <%= link_to as_(:cancel), main_path_to_return, :class => 'cancel' %>
    <%= loading_indicator_tag(:action => :update, :id => params[:id]) %>
  </p>

</form>
<script type="text/javascript">
Form.focusFirstElement('<%= element_form_id(:action => :update) -%>');
</script>

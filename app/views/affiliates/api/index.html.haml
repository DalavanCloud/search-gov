= content_for :title, "Search API - "
= affiliate_center_breadcrumbs([ link_to(@affiliate.display_name, affiliate_path(@affiliate)), 'Search API'] )
%p
  %a{ :name => "content" }
= render "/shared/api_key"
%h1
  Search API
= render_help_link(@help_link)
%p
  USASearch's Search Data API returns web, images, document, news, and video news search results, in JSON or XML format, along with sections for summary stats, boosted sites, and related searches.
%p
  The API has two important features of note, both of which are intended to minimize customers’ need to input complex queries while maximizing the search results. First, the API searches all the fields in the database (the full text of the record). Second, the API performs a stemmed search on customers’ search terms (for example, allergic and allergy retrieve the same search results).

.api
  %h2
    Base URL:
  %p
    http://search.usa.gov/api/search
  %h2
    Format:
  %p
    JSON or XML.
  %h2
    Type:
  %p
    HTTP GET
  %h2
    Authentication:
  %p
    None required.
  %h2
    Parameters:
  %ul
    %li
      %span affiliate:
      The name of your affiliate site. This parameter is required.
    %li
      %span api_key:
      your API key. This parameter is required.
    %li
      %span index:
      One of web, images, odie, news, or videonews. The default is 'web'. Bing provides the search results for web and image searches, while USASearch maintains the indexes for the news, video news, and document results.
    %li
      %span format:
      json or xml. The default is JSON.
    %li
      %span query:
      keywords.  Query terms for the search. This parameter must be URL encoded (e.g., "white+house" or "white%20house")
    %li
      %span page:
      Pagination of search results. Ten results are displayed on each search results page. This defaults to page 1.
    %li
      %span hl:
      Query highlighting on search results. Possible values are "true" or "false". Default is "true".
      %br
      When query highlighting is set to "true", matching text in search results title and content are wrapped with unicode characters "U+E000" and "U+E001".
      %br
      Examples: \ue000water\ue001 for JSON format and &amp;#57344;water&amp;#57345; for HTML format.
    %li
      %span callback:
      For JSONP requests (index must be 'json'), this specifies the name of the callback function (e.g., 'parseResponse').
  %h2
    Examples
  %br
  %h3 Web Search (Bing Results)
  %ul
    %li
      %span Search for "fire" with response in JSON format
      %br
      = api_search_url(:protocol => 'http', :affiliate => @affiliate.name, :api_key => current_user.api_key, :format => 'json', :query => 'fire', :index => 'web')
    %li
      %span Search for page 3 of "water" with query highlighting turned off and response in XML format
      %br
      = api_search_url(:protocol => 'http', :affiliate => @affiliate.name, :api_key => current_user.api_key, :format => 'xml', :query => 'water', :page => 3, :hl => 'false', :index => 'web')

  %h4
    Response Fields
  %p
    Note that not all response fields appear in all queries.
  %ul
    %li
      %span total:
      Total number of results for  the query.
    %li
      %span startrecord:
      The index of the first search result with regard to all possible search results
    %li
      %span endrecord:
      The index of the last search result with regard to all possible search results
    %li
      %span related_searches:
      An array of search query terms that are related to the query terms specified
    %li
      %span spelling_suggestion:
      A "did you mean" search suggestion for a potentially mistyped query term
    %li
      %span boosted_results:
      Array of boosted results for the query. Boosted results are created by the affiliate in their Boosted content section.
      %ul
        %li
          %span title:
          The title of the boosted content
        %li
          %span url:
          The url for the boosted content
        %li
          %span description:
          The description for the boosted content
    %li
      %span results:
      Array of results for the query. Each array item contains the following data.
      %ul
        %li
          %span title:
          The title of the result
        %li
          %span cacheUrl:
          A cached page for the result
        %li
          %span unescapedUrl:
          The direct url to the result page
        %li
          %span content:
          A snippet of content from the result page highlighting the query terms
        %li
          %span deepLinks:
          %ul
            %li
              %span Title:
              Title of the deep-linked page
            %li
              %span Url:
              Url to the deep-linked page

  %p
    %h4
      Response (JSON):
  %pre
    :preserve
      {
        "related_searches":["water rights","drinking water"],
        "boosted_results":[
          {
            "url": "http://www.boosted_water.com",
            "description": "This is an example boosted site about water.",
            "title":" A boosted site about water"
          }
        ],
        "startrecord":21,
        "endrecord":30,
        "total":65400,
        "spelling_suggestions":null,
        "results":[
          {
            "title":"Publication 17 (2010), Your Federal Income Tax",
            "deepLinks":null,
            "cacheUrl":"http://cc.bingj.com/cache.aspx?q=waater&d=4553228149131343&w=6228f8c9,2dcf99ee",
            "content":"However, the rust and \ue000water\ue001 damage to rugs and drapes caused by ...",
            "unescapedUrl":"http://www.irs.gov/publications/p17/ch25.html"
          },{
            "title":"Part III - Administrative, Procedural, and Miscellaneous",
            "deepLinks":null,"cacheUrl":"http://cc.bingj.com/cache.aspx?q=waater&d=4536005329682909",
            "content":"(4) Statement for energy efficient heating, cooling, ventilation, and hot ...",
            "unescapedUrl":"http://www.irs.gov/pub/irs-drop/n-06-52.pdf"
          },{
            "title":"Local Standards: Housing and Utilities",
            "deepLinks": [
              {
                "Title":"Individuals",
                "Url":"http://www.irs.gov/individuals/index.html"
              },{
                "Title":"E-File",
                "Url":"http://www.irs.gov/efile/index.html"
              },{
                "Title":"Contact IRS",
                "Url":"http://www.irs.gov/contact/index.html"
              },{
                "Title":"Where To File",
                "Url":"http://www.irs.gov/file/index.html"
              }
              ...
            ],
            "cacheUrl":"http://cc.bingj.com/cache.aspx?q=waater&d=4608066291501781&w=e94447c9,486a0a05",
            "content":"Disclaimer: IRS Collection Financial Standards are intended for use in ...",
            "unescapedUrl":"http://www.irs.gov/businesses/small/article/0,,id=104696,00.html"
          }
          ...
        ]
      }

  %p
    %h4
      Response (XML):
  %pre.xml
    :preserve
      &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
      &lt;search&gt;
        &lt;startrecord type=&quot;integer&quot;&gt;21&lt;/startrecord&gt;
        &lt;endrecord type=&quot;integer&quot;&gt;30&lt;/endrecord&gt;
        &lt;spelling-suggestions nil=&quot;true&quot;&gt;&lt;/spelling-suggestions&gt;
        &lt;related type=&quot;array&quot;&gt;&lt;related&gt;space&lt;/related&gt;&lt;/related&gt;
        &lt;total type=&quot;integer&quot;&gt;1390000000&lt;/total&gt;
        &lt;boosted-results type=&quot;array&quot;&gt;
          &lt;boosted-result&gt;
            &lt;title&gt;Water on, in, and above the Earth - USGS Water Science for Schools&lt;/title&gt;
            &lt;description&gt;Earth's water: How much water is there? Where is it located? ...&lt;/description&gt;
            &lt;url&gt;http://ga.water.usgs.gov/edu/mearth.html&lt;/url&gt;
          &lt;/boosted-result&gt;
        &lt;/boosted-results&gt;
        &lt;results type=&quot;array&quot;&gt;
          &lt;result&gt;
            &lt;title&gt;Bottled &amp;#57344;Water&amp;#57345; Information ...&lt;/title&gt;
            &lt;deepLinks nil=&quot;true&quot;&gt;&lt;/deepLinks&gt;
            &lt;cacheUrl&gt;http://cc.bingj.com/cache.aspx?q=water&amp;amp;d=4844560191981002&lt;/cacheUrl&gt;
            &lt;content&gt;Get bottled &amp;#57344;water&amp;#57345; and industry info ...&lt;/content&gt;
            &lt;unescapedUrl&gt;http://www.myspringwater.com/Default.aspx&lt;/unescapedUrl&gt;
          &lt;/result&gt;
          &lt;result&gt;
            &lt;title&gt;California &amp;#57344;Water&amp;#57345; Service Company: Home&lt;/title&gt;
            &lt;deepLinks type=&quot;array&quot;&gt;
              &lt;deepLink&gt;
                &lt;Title&gt;Account&lt;/Title&gt;
                &lt;Url&gt;http://www.calwater.com/your_account/index.php&lt;/Url&gt;
              &lt;/deepLink&gt;
              &lt;deepLink&gt;
                &lt;Title&gt;Contact Us&lt;/Title&gt;
                &lt;Url&gt;http://www.calwater.com/contact/index.php&lt;/Url&gt;
              &lt;/deepLink&gt;
              &lt;deepLink&gt;
                &lt;Title&gt;Your District&lt;/Title&gt;
                &lt;Url&gt;http://www.calwater.com/your_district/index.php&lt;/Url&gt;
              &lt;/deepLink&gt;
            &lt;/deepLinks&gt;
            &lt;cacheUrl&gt;http://cc.bingj.com/cache.aspx?q=water&amp;amp;d=4531968189268674&amp;amp;&lt;/cacheUrl&gt;
            &lt;content&gt;Holding company of two subsidiaries: California &amp;#57344;Water&amp;#57345; ...&lt;/content&gt;
            &lt;unescapedUrl&gt;http://www.calwater.com/&lt;/unescapedUrl&gt;
          &lt;/result&gt;
          &lt;!-- ... --&gt;
        &lt;/results&gt;
      &lt;/search&gt;

  %br
  %h3 Odie Search (On-Demand Indexed Document Results)
  %ul
    %li
      %span Search for "fire" with response in JSON format
      %br
      = api_search_url(:protocol => 'http', :affiliate => @affiliate.name, :api_key => current_user.api_key, :format => 'json', :query => 'fire', :index => 'odie')
    %li
      %span Search for page 3 of "water" with query highlighting turned off and response in XML format
      %br
      = api_search_url(:protocol => 'http', :affiliate => @affiliate.name, :api_key => current_user.api_key, :format => 'xml', :query => 'water', :page => 3, :hl => 'false', :index => 'odie')

  %h4
    Response Fields
  %ul
    %li
      %span total
    %li
      %span startrecord
    %li
      %span endrecord
    %li
      %span results:
      Array of results for the query. Each array item contains the following data.
      %ul
        %li
          %span title:
          The title of the result
        %li
          %span unescapedUrl:
          The direct url to the result page
        %li
          %span content:
          A snippet of content from the result page highlighting the query terms

  %br
  %h3 News Search (RSS Feeds)
  %ul
    %li
      %span Search for "fire" with response in JSON format
      %br
      = api_search_url(:protocol => 'http', :affiliate => @affiliate.name, :api_key => current_user.api_key, :format => 'json', :query => 'fire', :index => 'news')
    %li
      %span Search for page 3 of "water" with query highlighting turned off and response in XML format
      %br
      = api_search_url(:protocol => 'http', :affiliate => @affiliate.name, :api_key => current_user.api_key, :format => 'xml', :query => 'water', :page => 3, :hl => 'false', :index => 'news')

  %h4
    Response Fields
  %ul
    %li
      %span total
    %li
      %span startrecord
    %li
      %span endrecord
    %li
      %span results:
      Array of news results for the query. Each item contains the following data.
      %ul
        %li
          %span title:
          The title of the result
        %li
          %span unescapedUrl:
          The direct url to the result page
        %li
          %span content:
          A snippet of content from the result page highlighting the query terms
        %li
          %span publishedAt:
          The date the news story was published

  %br
  %h3 Video News Search (Video RSS Feeds)
  %ul
    %li
      %span Search for "fire" with response in JSON format
      %br
      = api_search_url(:protocol => 'http', :affiliate => @affiliate.name, :api_key => current_user.api_key, :format => 'json', :query => 'fire', :index => 'videonews')
    %li
      %span Search for page 3 of "water" with query highlighting turned off and response in XML format
      %br
      = api_search_url(:protocol => 'http', :affiliate => @affiliate.name, :api_key => current_user.api_key, :format => 'xml', :query => 'water', :page => 3, :hl => 'false', :index => 'videonews')

  %h4
    Response Fields
  %ul
    %li
      %span total
    %li
      %span startrecord
    %li
      %span endrecord
    %li
      %span results:
      Array of video news results for the query. Each item contains the following data.
      %ul
        %li
          %span title:
          The title of the result
        %li
          %span unescapedUrl:
          The direct url to the video result page
        %li
          %span content:
          A snippet of content from the result page highlighting the query terms
        %li
          %span publishedAt:
          The date the video news story was published

  %br
  %h3 Image Search
  %ul
    %li
      %span Search for "fire" with response in JSON format
      %br
      = api_search_url(:protocol => 'http', :affiliate => @affiliate.name, :api_key => current_user.api_key, :format => 'json', :query => 'fire', :index => 'images')
    %li
      %span Search for page 3 of "water" with query highlighting turned off and response in XML format
      %br
      = api_search_url(:protocol => 'http', :affiliate => @affiliate.name, :api_key => current_user.api_key, :format => 'xml', :query => 'water', :page => 3, :hl => 'false', :index => 'images')

  %h4
    Response Fields
  %ul
    %li
      %span total
    %li
      %span startrecord
    %li
      %span endrecord
    %li
      %span related_searches
    %li
      %span spelling_suggestion
    %li
      %span results:
      Array of image results for the query. Each item contains the following data.
      %ul
        %li
          %span title:
          The title of the result
        %li
          %span MediaUrl:
          The direct url to the image result
        %li
          %span FileSize:
          Size in bytes of the image
        %li
          %span Width:
          The width of the image in pixels
        %li
          %span Height:
          The height of the image in pixels
        %li
          %span ContentType:
          The content type of the image
        %li
          %span Thumbnail:
          %ul
            %li
              %span FileSize:
              Size in bytes of the thumbnail image
            %li
              %span Width:
              The width of the thumbnail image in pixels
            %li
              %span Height:
              The height of the thumbnail image in pixels
            %li
              %span Url:
              The direct url to the thumbnail image
            %li
              %span ContentType:
              The content type of the thumbnail image

.api.tos
  %h2 Terms of Service
  %p
    By using a USASearch API, you agree to our
    = link_to 'Terms of Service', TOS_URL
    \.

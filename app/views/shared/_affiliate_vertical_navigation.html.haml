- rss_feed = @search.is_a?(NewsSearch) ? @search.rss_feed : nil
- document_collection = @search.is_a?(OdieSearch) ? @search.document_collection : nil
- search_params = {:query => params[:query], :affiliate => @affiliate.name}
- search_params.merge!(:channel => rss_feed.id) if rss_feed
- search_params.merge!(:tbs => params[:tbs]) if params[:tbs]
%ul.rss-feeds
  %li
    = link_to_if(@search.instance_of?(WebSearch) == false || document_collection.present?, t(:everything), search_path(search_params.remove(:channel))) do |everything|
      = content_tag :span, everything
  - if @affiliate.is_image_search_enabled?
    %li
      = link_to_if(@search.instance_of?(ImageSearch) == false, t(:images), image_search_path(search_params.remove(:channel, :tbs))) do |images|
        = content_tag :span, images
  - @affiliate.active_rss_feeds.each do |feed|
    %li{ :class => (feed == @affiliate.active_rss_feeds.last ? 'last' : nil) }
      = link_to_unless((rss_feed && rss_feed.id == feed.id), feed.name, news_search_path(search_params.merge(:channel => feed.id))) do |channel_name|
        = content_tag :span, channel_name

  - @affiliate.active_document_collections.each do |coll|
    %li{ :class => (coll == @affiliate.active_document_collections.last ? 'last' : nil) }
      = link_to_unless((document_collection && document_collection.id == coll.id), coll.name, docs_search_path(search_params.merge(:dc => coll.id).remove(:channel, :tbs))) do |collection_name|
        = content_tag :span, collection_name

- if @search.instance_of?(NewsSearch)
  %ul.time-filters
    %li
      = link_to_if(params[:tbs], t(:all_time), rss_feed ? news_search_path(search_params.remove(:tbs)) : search_path(search_params.remove(:tbs))) do |everything|
        = content_tag :span, everything
    - NewsItem::TIME_BASED_SEARCH_OPTIONS.each_pair do |tbs, extent|
      %li{ :class => (extent == :year ? 'last' : nil) }
        = link_to_unless((params[:tbs] == tbs), t("last_#{extent}".to_sym), news_search_path(search_params.merge(:tbs => tbs))) do |last_time|
          = content_tag :span, last_time

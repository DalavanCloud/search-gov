- result_partial = result_partial_for(search)
= bing_spelling_suggestion_for(search, @affiliate, @search_vertical)
%a{:name => "content"}
- if search.results.present?
  = results_summary(search.startrecord, search.endrecord, search.total, search.query)
  - if (search.fedstates && search.fedstates != 'all')
    = results_restriction_message_for(search.fedstates, search_path(request.parameters.merge(:fedstates => nil)))
- if search.page == 0
  - if search.spotlight
    #spotlight= render_spotlight_with_click_tracking(search.spotlight.html, search.query, search.queried_at_seconds, @search_vertical)
  - if search.has_boosted_contents? or search.has_featured_collections?
    = render('shared/boosted_content', :search => search) if search.has_boosted_contents?
    = render('shared/featured_collections', :search => search) if search.has_featured_collections?
  - elsif (search.recalls && search.recalls.total > 0)
    = render "shared/recall_gov_box", :search => search
  - elsif @search.extra_image_results.present?
    = render "shared/popular_images", :search => search
  = render "/shared/indexed_documents", :search => @search, :affiliate => @affiliate if @affiliate
- if search.results.present?
  - search.results.each_with_index do |result, index|
    = render result_partial, :result => result, :affiliate => @affiliate, :search => search, :index => (search.startrecord + index - 1)
    = render "/shared/related_faqs" if index == 4 and search.page == 0
  = render "/shared/related_topics_wrapper"
  .pagination-and-logo
    = will_paginate(search.results, :previous_label => (t :prev_label), :next_label => (t :next_label))
    = image_tag("binglogo_#{I18n.locale}.gif", :class => 'bing-logo') if search.are_results_by_bing?
- elsif search.error_message
  %p.noresults #{search.error_message}
- else
  = render "/shared/no_results", :query => @search.query unless @affiliate
  = no_results_for search.query if @affiliate
- result_partial = result_partial_for(search)
= spelling_suggestion(search, @affiliate)
- if (search.boosted_sites && search.boosted_sites.total > 0)
  #boosted
    - search.boosted_sites.hits.each_with_index do |hit, index|
      - boosted_site_url = hit.instance.url
      .searchresult{:id => "boostedresult#{index+1}"}
        %h2= link_to highlight_hit(hit, :title), boosted_site_url
        %h3= highlight_hit(hit, :description)
        %h3= link_to boosted_site_url, boosted_site_url
%a{:name => "content"}
- if search.results.present?
  = results_summary(search.startrecord, search.endrecord, search.total, h(search.query))
  - if (search && search.scope_id && search.scope_id != 'all')
    = "#{t :search_results_restriction_message_front, :scope_setting => search.scope_id}  #{ link_to((t :search_results_restriction_message_link), search_path( request.parameters.merge(:fedstates => nil) ) ) }"
  - if search.spotlight
    #spotlight
      = search.spotlight.html
  - search.results.each_with_index do |result, index|
    = render result_partial, :result => result, :affiliate => @affiliate, :search => search, :index => (search.startrecord + index - 1)
  = will_paginate(search.results, :previous_label => (t :prev_label), :next_label => (t :next_label))
- elsif search.error_message
  %p.noresults #{search.error_message}
- else
  = no_results_for search.query

= spelling_suggestion(search.spelling_suggestion, @affiliate) if (search)
- if search.results.present?
  %h1= results_summary(search.startrecord, search.endrecord, search.total, search.query, false)
  %hr
  - if (@search && @search.recalls && @search.recalls.total > 0)
    .group{:id => "recalls"}
      %h1 Recent Recalls
      - search.recalls.hits.each_with_index do |hit, index|
        .row{:id => "recall#{index+1}"}
          .links= link_to "#{hit.instance.summary}, #{hit.instance.recalled_on.to_formatted_s(:short).strip}", hit.instance.recall_url
  .group
    - search.results.each_with_index do |search_result, index|
      .row{:id => "searchresult#{index+1}"}
        .title= display_result_title(search_result)
        .content
          = display_result_description(search_result)
        .links= display_result_links(search_result, false)
      - unless index == search.results.length - 1 then
        %hr
  %hr
  .group
    .row.center
      = will_paginate search.results, :page_links => false, :previous_label => "", :next_label => "Next Page"
- elsif search.error_message
  %p.noresults #{search.error_message}
- else
  = no_results_for search.query

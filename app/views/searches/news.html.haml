#search_box
  = render 'news_search_form'
  .left-nav-label-wrapper= left_nav_label(@affiliate.left_nav_label)
  .summary-wrapper
    - if @search.results.present?
      = results_summary(@search)
      .advancedsearch
        &nbsp;&nbsp;&bull;&nbsp;&nbsp;
        = advanced_search_link(@search_options, @affiliate)
    - else
      = render 'blank_news_search_results', :search => @search
#left_column
  = render "shared/affiliate_vertical_navigation"
%a#main_content
- @feed_type = determine_feed_type @search.rss_feed
#results{ class: @feed_type }
  %a{:name => "content"}
  - if @affiliate.is_time_filter_enabled?
    - search_path_method = (@search.class.to_s.underscore + '_path').to_sym
    .results-filters
      .time-filters
        .current-time-filter
          = render_current_time_filter(@search)
          %span.triangle.show-options
        %ul.time-filter-options
          %li
            = link_to_if(@search.since || @search.until, t(:all_time), @search.rss_feed ? send(search_path_method, @search_params.remove(:tbs, :since_date, :until_date)) : search_path(@search_params.remove(:tbs, :since_date, :until_date)), :class => 'updatable') do |all_time|
              = content_tag :div, all_time, class: 'selected'
          - search_uses_predefined_time_filter = params[:tbs].present? && params[:since_date].blank? && params[:until_date].blank?
          - NewsItem::TIME_BASED_SEARCH_OPTIONS.each_pair do |tbs, extent|
            %li
              = link_to_unless((search_uses_predefined_time_filter && (params[:tbs] == tbs)), t("last_#{extent}".to_sym), send(search_path_method, @search_params.merge(:tbs => tbs).remove(:since_date, :until_date)), :class => 'updatable') do |last_time|
                = content_tag :div, last_time, class: 'selected'
          %li
            = link_to("#{I18n.t(:custom_range)}", '#', id: 'custom_range', rel: '#cdr_search_form', class: "#{(params[:since_date].blank? && params[:until_date].blank?) ? 'nil' : 'selected'}")
      .sort-filters
        .current-sort-filter
          = render_current_sort_filter(params[:sort_by])
          %span.triangle.show-options
        %ul.sort-filter-options
          %li
            = link_to_if(params[:sort_by] != 'r', t(:by_relevance), send(search_path_method, @search_params.merge(sort_by: 'r')), :class => 'updatable') do |sort_by|
              = content_tag :div, sort_by, class: 'selected'
          %li
            = link_to_if(params[:sort_by] == 'r', t(:by_date), send(search_path_method, @search_params.merge(sort_by: 'd')), :class => 'updatable') do |sort_by|
              = content_tag :div, sort_by, class: 'selected'
      .clear-filters
        .clear-filter
          - if @search.tbs.present? || @search.since || @search.until || params[:sort_by].present? || params[:contributor].present? || params[:publisher].present? || params[:subject].present?
            - excluded_clear_params = [:tbs, :since_date, :until_date, :sort_by, :contributor, :publisher, :subject]
            = link_to t(:clear), @search.rss_feed ? send(search_path_method, @search_params.remove(*excluded_clear_params)) : search_path(@search_params.remove(*excluded_clear_params)), class: 'updatable'

      = render partial: 'news_custom_date_range_search_form', locals: { search_params: @search_params }

  - if @search.results.present?
    - @search.hits.each_with_index do |hit, index|
      = render determine_news_item_partial(@feed_type), :hit => hit, :index => index
    .pagination-and-logo
      = will_paginate(@search.results, :previous_label => (t :prev_label), :next_label => (t :next_label), :id => 'usasearch_pagination')
      = search_results_by_logo('some type of news')


= form_for @site, as: :site, url: site_templated_font_and_colors_path(@site), html: { class: 'form', id: 'edit-templated-font-and-colors' } do |f|
  .sub-nav-heading
    %h2 
      Templated Font & Color
      = "(#{@site.template.class::HUMAN_READABLE_NAME})"
    .action-bar
      %ul
        = list_item_with_link_to_current_help_page
        %li= f.submit 'Save', class: 'btn submit disabled', disabled: true
  = render_flash_message
  = f.error_messages class: 'alert alert-error', header_tag: 'h3'

  %fieldset
    =label_tag 'reset_theme', "Reset to Defaults"
    =check_box_tag 'reset_theme'

  %h2 Font
  = label_tag :font_family, 'Font Family'

  = select_tag "schema[css][font][default_font]", generate_template_font_dropdown(@site.template.load_schema.css.font.default_font, @site.template.load_schema.css.font.font_family)




  %h2 Colors

  = form_tag 
  - @site.template.load_schema.css.colors.each do |component|
    %h3= component[0].to_s.humanize.titleize if component[1].count > 0
    - component[1].each do |attribute_key_pair|
      .form-group
        .input-append.color{data: {color: attribute_key_pair[1], provide: 'colorpicker'}}
          =label_tag(attribute_key_pair[0], attribute_key_pair[0].to_s.humanize.titleize)
          .form-control= text_field_tag("schema[css][colors][#{component[0]}[#{attribute_key_pair[0]}]]", attribute_key_pair[1])
          %span.add-on.add-on-colorpicker
            %i


:javascript
  $(function(){
      $(".color").colorpicker();
  });